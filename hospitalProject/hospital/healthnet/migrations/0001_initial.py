# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-12-05 09:54
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_name', models.CharField(max_length=250)),
                ('doctor_name', models.CharField(max_length=250)),
                ('hospital', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_diagnosis', models.DateField(default=0)),
                ('doctors_notes', models.CharField(max_length=2500)),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthnet.Condition')),
            ],
        ),
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('salary', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, 'Must not be negative')])),
            ],
            options={
                'verbose_name_plural': 'users',
                'abstract': False,
                'verbose_name': 'user',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='InsurancePlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='LogItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('subject', models.CharField(default=None, max_length=50, null=True)),
                ('action', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('date_of_birth', models.DateField(default=0)),
                ('phone_number', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('[0-9]{10}', 'Must be 10 digits, numbers only')])),
                ('contact_first_name', models.CharField(blank=True, max_length=50)),
                ('contact_last_name', models.CharField(blank=True, max_length=50)),
                ('contact_phone_number', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator('[0-9]{10}|^$', 'Must be 10 digits, numbers only')])),
                ('admission', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='healthnet.Hospital')),
                ('insurance_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthnet.InsurancePlan')),
            ],
            options={
                'verbose_name': 'Patient',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctors_notes', models.CharField(max_length=2500)),
                ('date_prescribed', models.DateField(default=0)),
                ('drug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthnet.Drug')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthnet.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(verbose_name='Appointment Time')),
                ('end_time', models.DateTimeField(verbose_name='End Time')),
                ('description', models.TextField(max_length=500)),
                ('verify', models.BooleanField(default=False)),
                ('accept_appointment', models.BooleanField(default=False)),
                ('person', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='my_events', to='healthnet.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistic_type', models.IntegerField()),
                ('statistic_value', models.IntegerField()),
                ('statistic_string', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='SuperAdmin',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'users',
                'abstract': False,
                'verbose_name': 'user',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date_of_test', models.DateField(default=0)),
                ('results', models.CharField(choices=[('PEN', 'Pending'), ('POS', 'Positive'), ('NEG', 'Negative'), ('INC', 'Inconclusive')], max_length=3)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthnet.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('employee_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='healthnet.Employee')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthnet.Hospital')),
            ],
            options={
                'verbose_name': 'Doctor',
                'permissions': (('write_perscriptions', 'Can write perscriptions for patients'), ('give_diagnosis', 'Can give a patient a diagnosis')),
            },
            bases=('healthnet.employee',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HospitalAdministrator',
            fields=[
                ('employee_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='healthnet.Employee')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthnet.Hospital')),
            ],
            options={
                'verbose_name': 'Hospital Administrator',
            },
            bases=('healthnet.employee',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Nurse',
            fields=[
                ('employee_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='healthnet.Employee')),
            ],
            options={
                'verbose_name': 'Nurse',
            },
            bases=('healthnet.employee',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='message',
            name='receiver',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='logitem',
            name='actor',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='actor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthnet.Patient'),
        ),
        migrations.AddField(
            model_name='testresult',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthnet.Doctor'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='doctor',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_list', to='healthnet.Doctor'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthnet.Doctor'),
        ),
        migrations.AddField(
            model_name='patient',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthnet.Doctor'),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthnet.Doctor'),
        ),
    ]
